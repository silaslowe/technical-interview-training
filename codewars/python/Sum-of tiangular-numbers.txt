Sum of Triangular Numbers

Your task is to return the sum of Triangular Numbers up-to-and-including the nth Triangular Number.

Triangular Number: "any of the series of numbers (1, 3, 6, 10, 15, etc.) obtained by continued summation of the natural numbers 1, 2, 3, 4, 5, etc."

[01]
02 [03]
04 05 [06]
07 08 09 [10]
11 12 13 14 [15]
16 17 18 19 20 [21]
e.g. If 4 is given: 1 + 3 + 6 + 10 = 20.

Triangular Numbers cannot be negative so return 0 if a negative number is given.

My Solution:

def sum_triangular_numbers(m):
    end = 0
    n = 0
    result = []
    while n < m:
        n = n+1
        end += n
        result.append(end)
    return sum(result)

Other Solutions:
def sum_triangular_numbers(n):
    return n*(n+1)*(n+2)/6 if n>0 else 0


def sum_triangular_numbers(n):
    #your code here
    return sum(sum(range(x+1)) for x in range(n+1))